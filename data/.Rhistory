mutate(date_1_clean = strptime(date_1, '%Y-%m-%d'))
dates_df %>%
mutate(date_1_clean = as.POSIXct(strptime(date_1, '%Y-%m-%d')))
dates_df %>%
mutate(date_1_clean = as.POSIXct(strptime(date_1, '%Y-%m-%d')),
date_2_clean = aas.POSIXct(strptime(date_1, '%d/%m/%Y')))
dates_df %>%
mutate(date_1_clean = as.POSIXct(strptime(date_1, '%Y-%m-%d')),
date_2_clean = as.POSIXct(strptime(date_1, '%d/%m/%Y')))
dates_df %>%
mutate(date_1_clean = as.POSIXct(strptime(date_1, '%Y-%m-%d')),
date_2_clean = as.POSIXct(strptime(date_2, '%d/%m/%Y')))
dates_df %>%
mutate(date_1_clean = as.POSIXct(strptime(date_1, '%Y-%m-%d')),
date_2_clean = as.POSIXct(strptime(date_2, '%d/%m/%Y')),
date_interval = difftime(date_1_clean, date_2_clean, units='days'))
dates_df %>%
mutate(date_1_clean = as.POSIXct(strptime(date_1, '%Y-%m-%d')),
date_2_clean = as.POSIXct(strptime(date_2, '%d/%m/%Y')),
date_interval = difftime(date_2_clean, date_1_clean, units='days'))
dates_df <- data.frame(date_1 = as.factor(date_1),
date_2 = as.factor(date_2))
date_1 <- c('2012-01-02', '2014-04-05', '2019-01-01')
date_2 <- c('06/01/2012', '01/06/2015', '03/04/2019')
dates_df <- data.frame(date_1 = as.factor(date_1),
date_2 = as.factor(date_2))
dates_df$date_1
dates_df %>%
mutate(date_1_clean = as.POSIXct(strptime(as.character(date_1), '%Y-%m-%d')),
date_2_clean = as.POSIXct(strptime(as.character(date_2), '%d/%m/%Y')),
date_interval = difftime(date_2_clean, date_1_clean, units='days'))
date_1 <- c('2012-01-02 12:00:00', '2014-04-05 1:30:00', '2019-01-01 3:00:00')
date_2 <- c('06/01/2012', '01/06/2015', '03/04/2019')
dates_df <- data.frame(date_1 = as.factor(date_1),
date_2 = as.factor(date_2))
dates_df %>%
mutate(date_1_clean = as.POSIXct(strptime(as.character(date_1), '%Y-%m-%d %H:%M:%S')),
date_2_clean = as.POSIXct(strptime(as.character(date_2), '%d/%m/%Y')),
date_interval = difftime(date_2_clean, date_1_clean, units='days'))
?subset
dates_df<- dates_df %>%
mutate(date_1_clean = as.POSIXct(strptime(as.character(date_1), '%Y-%m-%d %H:%M:%S')),
date_2_clean = as.POSIXct(strptime(as.character(date_2), '%d/%m/%Y')),
date_interval = difftime(date_2_clean, date_1_clean, units='days'))
subset(dates_df, select = -c('date_1_clean'))
subset(dates_df, select = -c('date_1_clean','date_2_clean'))
subset(dates_df, select = -c(date_1_clean,date_2_clean))
?mice
install.packages('mice')
library(mice)
?mice
iris
ggplot(iris, aes(x = Petal.Width, y = Petal.length)) + geom_point(aes(color = Species))
library(tidyverse)
ggplot(iris, aes(x = Petal.Width, y = Petal.length)) + geom_point(aes(color = Species))
ggplot(iris, aes(x = Petal.Width, y = Petal.Length)) + geom_point(aes(color = Species))
iris
ggplot(iris, aes(x = Petal.Width, y = Petal.Length)) + geom_point(aes(color = Species))
?sample
sample(1:4, 4)
paste0(1:3, 'pink')
c(paste0(1:6, '-Pink'), paste0(1:4,  '-Green')
)
sample(c(paste0(1:6, '-Pink'), paste0(1:4,  '-Green')),10)
?strsplit
strsplit('gmail.com', '.')
strsplit('gmail.com', '[.]')
strsplit('gmail.com', '[.]')[[1]][1]
emails <- c('gmail.com', 'yahoo.co.uk', 'hotmail.com')
sapply(emails, function(x){ strsplit(x, '[.]')[[1]][1]})
?tolower
sapply(emails, function(x){ strsplit(tolower(x), '[.]')[[1]][1]})
shiny::runApp('location_tracker')
install.packages('shinydashboard')
install.packages('leaflet')
install.packages('jsonlite')
install.packages('leaflet.extras')
runApp('location_tracker')
runApp('location_tracker')
sum(sapply(1:200, function(x) 1/(x*(x+1))))
sum(sapply(1:600, function(x) 1/(x*(x+1))))
sum(sapply(1:900, function(x) 1/(x*(x+1))))
sum(sapply(1:99900, function(x) 1/(x*(x+1))))
sum(sapply(1:99900, function(x) e^(-2*x))))
exp(1)
sum(sapply(1:99900, function(x) exp(-2*x))))
sum(sapply(1:99900, function(x) exp(-2*x)))
exp(2)
2.7*2.7
exp(2)/(exp(2)-1)
n <- 10
theta <- 0.2
sum(sapply(1:n, function(x) theta^x *  (1-theta)^x))
sum(sapply(1:n, function(x) choose(n, x) * theta^x *  (1-theta)^x))
sum(sapply(1:n, function(x) choose(n, x) * theta^x *  (1-theta)^(n-x)))
sum(sapply(1:n, function(x) theta^x *  (1-theta)^(n-x)  ))
sum(sapply(0:n, function(x) choose(n, x) * theta^x *  (1-theta)^(n-x)  ))
sum(sapply(0:n, function(x) choose(n, x) * theta^x *  (1-theta)^(n-x)  ))
(1/n) * sum(sapply(0:n, function(x) sqrt(n)))
n<- 99999
(1/n) * sum(sapply(0:n, function(x) sqrt(n)))
n<- 999999999999
(1/n) * sum(sapply(0:n, function(x) sqrt(n)))
n<- 9999999
(1/n) * sum(sapply(0:n, function(x) sqrt(n)))
x <- 1
y <- 2
for{i in 1:100}{
z <- 1/4 * y + 1/2 *x
print(z)
x <- y
y <- z
}
for (i in 1:100){
z <- 1/4 * y + 1/2 *x
print(z)
x <- y
y <- z
}
x <- 2
y <- 1
for (i in 1:100){
z <- 1/4 * y + 1/2 *x
print(z)
x <- y
y <- z
}
x <- 5
y <- 1
for (i in 1:100){
z <- 1/4 * y + 1/2 *x
print(z)
x <- y
y <- z
}
x <- 200
y <- 1
for (i in 1:100){
z <- 1/4 * y + 1/2 *x
print(z)
x <- y
y <- z
}
sum(sapply(1:10, function(x) (1/10)^{2}))
sum(sapply(1:10, function(x) (1/10)^{2}))
sample_dat <- data.frame(a = c('Hi',,'Maria',''), b = c(,1,,2))
sample_dat <- data.frame(a = c('Hi','','Maria',''), b = c(,1,,2))
sample_dat <- data.frame(a = c('Hi','','Maria',''), b = c('','1',,'2'))
sample_dat <- data.frame(a = c('Hi','','Maria',''), b = c('','1','','2'))
sample_dat
sample_dat %>%
mutate(index = row_number())
library(tidyverse)
sample_dat <- data.frame(a = c('Hi','','Maria',''), b = c('','1','','2'))
sample_dat
sample_dat %>%
mutate(index = row_number())
(sample_dat %>% mutate(index = row_number()) ) %>%
inner_join((sample_dat  %>% mutate(index = row_number()+1)))
(sample_dat %>% mutate(index = row_number()) ) %>%
inner_join((sample_dat  %>% mutate(index = row_number()+1)), by =c('index'))
(sample_dat %>% mutate(index = row_number()) ) %>%
left_join((sample_dat  %>% mutate(index = row_number()+1)), by =c('index')) %>%
mutate
(sample_dat %>% mutate(index = row_number()) ) %>%
left_join((sample_dat  %>% mutate(index = row_number()+1)), by =c('index')) %>%
filter(b.x != '')
sample_dat <- data.frame(a = c('Hi','','Maria','','LOL'), b = c('','1','','2','3'))
(sample_dat %>% mutate(index = row_number()) ) %>%
left_join((sample_dat  %>% mutate(index = row_number()+1)), by =c('index')) %>%
filter(b.x != '')
(sample_dat %>% mutate(index = row_number()) ) %>%
left_join((sample_dat  %>% select(a) %>% mutate(index = row_number()+1)), by =c('index')) %>%
filter(b.x != '') # %>%
(sample_dat %>% mutate(index = row_number()) ) %>%
left_join((sample_dat  %>% select(a) %>% mutate(index = row_number()+1)), by =c('index')) %>%
filter(b != '') # %>%
?ifelse
mutate(a = ifelse(a.x == '', a.x, b.x))
(sample_dat %>% mutate(index = row_number()) ) %>%
left_join((sample_dat  %>% select(a) %>% mutate(index = row_number()+1)), by =c('index')) %>%
filter(b != '') %>%
mutate(a = ifelse(a.x == '', a.x, b.x))
(sample_dat %>% mutate(index = row_number()) ) %>%
left_join((sample_dat  %>% select(a) %>% mutate(index = row_number()+1)), by =c('index')) %>%
filter(b != '') %>%
mutate(a = ifelse(a.x == '', a.x, b.y))
(sample_dat %>% mutate(index = row_number()) ) %>%
left_join((sample_dat  %>% select(a) %>% mutate(index = row_number()+1)), by =c('index')) %>%
filter(b != '') %>%
mutate(a = ifelse(a.x == '', a.x, a.y))
(sample_dat %>% mutate(index = row_number()) ) %>%
left_join((sample_dat  %>% select(a) %>% mutate(index = row_number()+1)), by =c('index')) %>%
filter(b != '') %>%
mutate(a = paste0(a.x, a.y))
(sample_dat %>% mutate(index = row_number()) ) %>%
left_join((sample_dat  %>% select(a) %>% mutate(index = row_number()+1)), by =c('index')) %>%
filter(b != '') %>%
mutate(a = paste0(a.x, a.y)) %>%
select(-a.x, -a.y)
(sample_dat %>% mutate(index = row_number()) ) %>%
left_join((sample_dat  %>% select(a) %>% mutate(index = row_number()+1)), by =c('index')) %>%
filter(b != '') %>%
mutate(a = paste0(a.x, a.y)) %>%
select(-a.x, -a.y)
sample_dat <- data.frame(a = c('Hi','','Maria','','LOL'), b = c('','1','','2','3'))
(sample_dat %>% mutate(index = row_number()) ) %>%
left_join((sample_dat  %>% select(a) %>% mutate(index = row_number()+1)), by =c('index')) %>%
filter(b != '') %>%
mutate(a = paste0(a.x, a.y)) %>%
select(-a.x, -a.y)
sample_dat
(sample_dat %>% mutate(index = row_number()) ) %>%
left_join((sample_dat  %>% select(a) %>% mutate(index = row_number()+1)), by =c('index')) %>%
filter(b != '') %>%
mutate(a = paste0(a.x, a.y)) %>%
select(-a.x, -a.y)
(sample_dat %>% mutate(index = row_number()) ) %>%
left_join((sample_dat  %>% select(a) %>% mutate(index = row_number()+1)), by =c('index')) %>%
filter(b != '') %>%
mutate(a = paste0(a.x, a.y)) %>%
select(-a.x, -a.y, -index)
sample_dat
sample_dat <- data.frame(a = c('','Hi','','Maria','','LOL'), b = c('0','','1','','2','3'))
(sample_dat %>% mutate(index = row_number()+1) ) %>%
left_join((sample_dat  %>% select(a) %>% mutate(index = row_number()+1)), by =c('index')) %>%
filter(b != '') %>%
mutate(a = paste0(a.x, a.y)) %>%
select(-a.x, -a.y, -index)
(sample_dat %>% mutate(index = row_number()+1) ) %>%
left_join((sample_dat  %>% select(a) %>% mutate(index = row_number())), by =c('index')) %>%
filter(b != '') %>%
mutate(a = paste0(a.x, a.y)) %>%
select(-a.x, -a.y, -index)
sample_dat
sample_dat <- data.frame(a = c('','Hi','','Maria','LOL'), b = c('0','','1','','3'))
(sample_dat %>% mutate(index = row_number()+1) ) %>%
left_join((sample_dat  %>% select(a) %>% mutate(index = row_number())), by =c('index')) %>%
filter(b != '') %>%
mutate(a = paste0(a.x, a.y)) %>%
select(-a.x, -a.y, -index)
sample_dat
(sample_dat %>% mutate(index = row_number()+1) ) %>%
right_join((sample_dat  %>% select(a) %>% mutate(index = row_number())), by =c('index')) %>%
filter(b != '') %>%
mutate(a = paste0(a.x, a.y)) %>%
select(-a.x, -a.y, -index)
(sample_dat %>% mutate(index = row_number()+1) ) %>%
full_join((sample_dat  %>% select(a) %>% mutate(index = row_number())), by =c('index')) %>%
filter(b != '') %>%
mutate(a = paste0(a.x, a.y)) %>%
select(-a.x, -a.y, -index)
(sample_dat %>% mutate(index = row_number()+1) ) %>%
left_join((sample_dat  %>% select(a) %>% mutate(index = row_number())), by =c('index')) %>%
filter(b != '') %>%
mutate(a = paste0(a.x, a.y)) %>%
select(-a.x, -a.y, -index)
(sample_dat %>% mutate(index = row_number()+1) ) %>%
left_join((sample_dat  %>% select(a) %>% mutate(index = row_number())), by =c('index')) %>%
filter(b != '') #%>%
(sample_dat %>% mutate(index = row_number()+1) ) %>%
left_join((sample_dat  %>% select(a) %>% mutate(index = row_number())), by =c('index')) #%>%
?fill_na
?replace_na
(sample_dat %>% mutate(index = row_number()+1) ) %>%
left_join((sample_dat  %>% select(a) %>% mutate(index = row_number())), by =c('index')) %>%
filter(b != '') %>%
mutate(a.y = replace_na(a.y, ''),a = paste0(a.x, a.y)) %>%
select(-a.x, -a.y, -index)
sample_data
sample_dat
(sample_dat %>% mutate(index = row_number()+1) ) %>%
left_join((sample_dat  %>% select(a) %>% mutate(index = row_number())), by =c('index')) %>%
filter(b != '') %>%
mutate(a.y = replace_na(a.y, ''),a = paste0(a.x, a.y)) %>%
select(-a.x, -a.y, -index)
?factorial
sum(sapply(0:999, function(x) (1/9999)^x / factorial(k+1)))
sum(sapply(0:999, function(x) (1/9999)^x / factorial(x+1)))
sum(sapply(0:999, function(x) (1/999999)^x / factorial(x+1)))
n<- 99999
z <- 3
(1-1/n^z)^n
z <- 10
(1-1/n^z)^n
n<- 99
(1-1/n^z)^n
n<- 5
(1-1/n^z)^n
(1-1/n)^n
1/e
1/exp(1)
nmax <- 100
sapply(1:100, function(n){
sum(sapply(1:n, 1/(n*log(nmax))^2 ))
})
sum(sapply(1:n, function(x) 1/(x*log(nmax))^2 ))
sapply(1:100, function(n){
sum(sapply(1:n, function(x) 1/(x*log(nmax))^2 ))
})
?mean
sapply(1:length(tmp), function(x) mean(tmp[1:x]))
tmp <- sapply(1:100, function(n){
sum(sapply(1:n, function(x) 1/(x*log(nmax))^2 ))
})
sapply(1:length(tmp), function(x) mean(tmp[1:x]))
nmax <- 1000
tmp <- sapply(1:1000, function(n){
sum(sapply(1:n, function(x) 1/(x*log(nmax))^2 ))
})
sapply(1:length(tmp), function(x) mean(tmp[1:x]))
nmax <- 10000
tmp <- sapply(1:10000, function(n){
sum(sapply(1:n, function(x) 1/(x*log(nmax))^2 ))
})
sapply(1:length(tmp), function(x) mean(tmp[1:x]))
vals <- .Last.value
tail(vals)
?choose
choose(10,x) * 0.5^(x) *(3/2)*(10-x)
k <- 9
sapply(k:10, function(x){
choose(10,x) * 0.5^(x) *(3/2)*(10-x)
})
k <- 7
sapply(k:10, function(x){
choose(10,x) * 0.5^(x) *(3/2)*(10-x)
})
k <- 0
sapply(k:10, function(x){
choose(10,x) * 0.5^(x) *(3/2)*(10-x)
})
sapply(1:10, function(y) sum(sapply(y:10, function(x){
fska
_)
sapply(1:10, function(y) {
sum(sapply(y:10, function(x){
choose(10,x) * 0.5^(x) *(3/2)*(10-x)
}))
})
1:10
1/2^10
10:10
x <- 10
choose(10,x) * 0.5^(x) *(3/2)*(10-x)
0.5^10
choose(10,10)
choose(10,x) * 0.5^(x) *(3/2)^(10-x)
sapply(1:10, function(y) {
sum(sapply(y:10, function(x){
choose(10,x) * 0.5^(x) *(3/2)^(10-x)
}))
})
2^10
choose(10,x)*0.5^10
sapply(1:10, function(y){
choose(10,x)*0.5^10
})
choose(10,y)*0.5^10
?choose
sapply(1:10, function(y){
choose(10,y)*0.5^10
})
choose(10,y)
sapply(1:10, function(y){
choose(10,y)
})
2^10 * 0.0507
k <- 3
sum(sapply(0:k, function(y){
choose(10,y)*0.5^{10}
}))
k <- 2
sum(sapply(0:k, function(y){
choose(10,y)*0.5^{10}
}))
k <- 1
sum(sapply(0:k, function(y){
choose(10,y)*0.5^{10}
}))
choose(10,y)
sum(sapply(0:k, function(y){
choose(10,y)
}))
sapply(0:k, function(y){
choose(10,y)
})
sapply(0:k, function(y){
choose(10,y)
})
sapply(0:k, function(y){
choose(10,y)
})
k <- 10
sapply(0:k, function(y){
choose(10,y)
})
2^{10}*0.0507
sum(sapply(0:k, function(y){
choose(10,y)
}))
sum(sapply(6:10, function(y){
choose(10,y)
}))
386/2^10
choose(10,y)*x^{y}*(1-x)^{10-y}
sapply(seq(0,1,0.05), function(x){
sum(sapply(6:10) function(y){
choose(10,y)*x^{y}*(1-x)^{10-y}
})
})
choose(10,y)*x^y*(1-x)^(10-y)
sapply(seq(0,1,0.05), function(x){
sum(sapply(6:10) function(y){
choose(10,y)*x^y*(1-x)^(10-y)
})
})
sapply(seq(0,1,0.05), function(x){
sum(sapply(6:10, function(y){
choose(10,y)*x^y*(1-x)^(10-y)
}))
})
sapply(c(0.5), function(x){
sum(sapply(6:10, function(y){
choose(10,y)*x^y*(1-x)^(10-y)
}))
})
plot(sapply(seq(0,1,0.05), function(x){
sum(sapply(6:10, function(y){
choose(10,y)*x^y*(1-x)^(10-y)
}))
}))
?seq
plot(sapply(seq(0,1,0.05), function(x){
sum(sapply(6:10, function(y){
choose(10,y)*x^y*(1-x)^(10-y)
}))
}))
?plot
plot(seq(0,1,0.05),sapply(seq(0,1,0.05), function(x){
sum(sapply(6:10, function(y){
choose(10,y)*x^y*(1-x)^(10-y)
}))
}))
?plot
plot(seq(0,1,0.05),sapply(seq(0,1,0.05), function(x){
sum(sapply(6:10, function(y){
choose(10,y)*x^y*(1-x)^(10-y)
}))
}), ylab='')
res_df <- data.frame(dataset = c('Heart', 'ILPD', 'Bank', 'Heart', 'ILPD', 'Bank'),
source = c('Us','Us','Us', 'Paper', 'Paper', 'Paper')
mean = c(0.76, 0.70769, 0.9829, 0.789, 0.696, 0.988),
std = c(0.0042, 0.0272, 0.00906, 0.024, 0.012, 0.012))
res_df <- data.frame(dataset = c('Heart', 'ILPD', 'Bank', 'Heart', 'ILPD', 'Bank'),
source = c('Us','Us','Us', 'Paper', 'Paper', 'Paper'),
mean = c(0.76, 0.70769, 0.9829, 0.789, 0.696, 0.988),
std = c(0.0042, 0.0272, 0.00906, 0.024, 0.012, 0.012))
res_df
library(ggplot2)
ggplot(res_df, aes(x = dataset, y = mean, fill = source)) + geom_bar()
ggplot(res_df, aes(x = dataset, y = mean, fill = source)) + geom_bar(stat = 'identity')
?geom_bar
ggplot(res_df, aes(x = dataset, y = mean, fill = source)) +
geom_bar(stat = 'identity', position = position_dodge())
res_df %>%
mutate(upper = mean + std,
lower = mean - std) %>%
ggplot(aes(x = dataset, y = mean, fill = source)) +
geom_bar(stat = 'identity', position = position_dodge()) +
geom_errorbar(aes(ymin = lower, ymax = upper))
library(tidyverse)
res_df %>%
mutate(upper = mean + std,
lower = mean - std) %>%
ggplot(aes(x = dataset, y = mean, fill = source)) +
geom_bar(stat = 'identity', position = position_dodge()) +
geom_errorbar(aes(ymin = lower, ymax = upper))
res_df %>%
mutate(upper = mean + std,
lower = mean - std) %>%
ggplot(aes(x = dataset, y = mean, fill = source)) +
geom_bar(stat = 'identity', position = position_dodge()) +
geom_errorbar(aes(ymin = lower, ymax = upper), position = position_dodge())
res_df <- data.frame(dataset = c('Heart', 'ILPD', 'Bank', 'Heart', 'ILPD', 'Bank'),
source = c('Us','Us','Us', 'Paper', 'Paper', 'Paper'),
mean = c(0.76, 0.70769, 0.9829, 0.789, 0.696, 0.988),
std = c(0.042, 0.0272, 0.00906, 0.024, 0.012, 0.012))
res_df %>%
mutate(upper = mean + std,
lower = mean - std) %>%
ggplot(aes(x = dataset, y = mean, fill = source)) +
geom_bar(stat = 'identity', position = position_dodge()) +
geom_errorbar(aes(ymin = lower, ymax = upper), position = position_dodge())
#FICO
fico <- read_csv('fico.csv', col_names = TRUE)
library(tidyverse)
#FICO
fico <- read_csv('fico.csv', col_names = TRUE)
setwd("~/Documents/DecisionRulesColumnGen/data")
#FICO
fico <- read_csv('fico.csv', col_names = TRUE)
head(fico)
#FICO
fico <- read_csv('fico.csv', col_names = TRUE)
fico
fico$Y <- fico$RiskPerformance == 'Good'
fico <- select(-RiskPerformance)
fico <- select(fico, -RiskPerformance)
fico
fico$Y
write_csv(fico, 'fico_clean.csv')
